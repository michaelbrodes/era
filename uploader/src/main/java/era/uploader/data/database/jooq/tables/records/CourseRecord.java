/*
 * This file is generated by jOOQ.
*/
package era.uploader.data.database.jooq.tables.records;


import era.uploader.data.database.jooq.tables.Course;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseRecord extends UpdatableRecordImpl<CourseRecord> implements Record7<Integer, String, String, String, String, Integer, String> {

    private static final long serialVersionUID = 662318314;

    /**
     * Setter for <code>course.unique_id</code>.
     */
    public CourseRecord setUniqueId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>course.unique_id</code>.
     */
    public Integer getUniqueId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>course.name</code>.
     */
    public CourseRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>course.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>course.department</code>.
     */
    public CourseRecord setDepartment(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>course.department</code>.
     */
    public String getDepartment() {
        return (String) get(2);
    }

    /**
     * Setter for <code>course.course_number</code>.
     */
    public CourseRecord setCourseNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>course.course_number</code>.
     */
    public String getCourseNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>course.section_number</code>.
     */
    public CourseRecord setSectionNumber(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>course.section_number</code>.
     */
    public String getSectionNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>course.semester_id</code>.
     */
    public CourseRecord setSemesterId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>course.semester_id</code>.
     */
    public Integer getSemesterId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>course.uuid</code>.
     */
    public CourseRecord setUuid(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>course.uuid</code>.
     */
    public String getUuid() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Course.COURSE.UNIQUE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Course.COURSE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Course.COURSE.DEPARTMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Course.COURSE.COURSE_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Course.COURSE.SECTION_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Course.COURSE.SEMESTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Course.COURSE.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDepartment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCourseNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSectionNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getSemesterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDepartment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCourseNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSectionNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getSemesterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value1(Integer value) {
        setUniqueId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value3(String value) {
        setDepartment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value4(String value) {
        setCourseNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value5(String value) {
        setSectionNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value6(Integer value) {
        setSemesterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value7(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseRecord
     */
    public CourseRecord() {
        super(Course.COURSE);
    }

    /**
     * Create a detached, initialised CourseRecord
     */
    public CourseRecord(Integer uniqueId, String name, String department, String courseNumber, String sectionNumber, Integer semesterId, String uuid) {
        super(Course.COURSE);

        set(0, uniqueId);
        set(1, name);
        set(2, department);
        set(3, courseNumber);
        set(4, sectionNumber);
        set(5, semesterId);
        set(6, uuid);
    }
}
