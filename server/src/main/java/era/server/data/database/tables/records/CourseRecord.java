/*
 * This file is generated by jOOQ.
*/
package era.server.data.database.tables.records;


import era.server.data.database.tables.Course;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseRecord extends UpdatableRecordImpl<CourseRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = -1480516523;

    /**
     * Setter for <code>era.course.unique_id</code>.
     */
    public CourseRecord setUniqueId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>era.course.unique_id</code>.
     */
    public Long getUniqueId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>era.course.uuid</code>.
     */
    public CourseRecord setUuid(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>era.course.uuid</code>.
     */
    public String getUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>era.course.name</code>.
     */
    public CourseRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>era.course.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>era.course.semester_id</code>.
     */
    public CourseRecord setSemesterId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>era.course.semester_id</code>.
     */
    public Long getSemesterId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Course.COURSE.UNIQUE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Course.COURSE.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Course.COURSE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Course.COURSE.SEMESTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getSemesterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getSemesterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value1(Long value) {
        setUniqueId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value2(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value4(Long value) {
        setSemesterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseRecord
     */
    public CourseRecord() {
        super(Course.COURSE);
    }

    /**
     * Create a detached, initialised CourseRecord
     */
    public CourseRecord(Long uniqueId, String uuid, String name, Long semesterId) {
        super(Course.COURSE);

        set(0, uniqueId);
        set(1, uuid);
        set(2, name);
        set(3, semesterId);
    }
}
