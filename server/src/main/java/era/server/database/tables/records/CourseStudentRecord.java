/*
 * This file is generated by jOOQ.
*/
package era.server.database.tables.records;


import era.server.database.tables.CourseStudent;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseStudentRecord extends UpdatableRecordImpl<CourseStudentRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -1243151790;

    /**
     * Setter for <code>era.course_student.course_id</code>.
     */
    public CourseStudentRecord setCourseId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>era.course_student.course_id</code>.
     */
    public Long getCourseId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>era.course_student.student_id</code>.
     */
    public CourseStudentRecord setStudentId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>era.course_student.student_id</code>.
     */
    public Long getStudentId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return CourseStudent.COURSE_STUDENT.COURSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return CourseStudent.COURSE_STUDENT.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseStudentRecord value1(Long value) {
        setCourseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseStudentRecord value2(Long value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseStudentRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseStudentRecord
     */
    public CourseStudentRecord() {
        super(CourseStudent.COURSE_STUDENT);
    }

    /**
     * Create a detached, initialised CourseStudentRecord
     */
    public CourseStudentRecord(Long courseId, Long studentId) {
        super(CourseStudent.COURSE_STUDENT);

        set(0, courseId);
        set(1, studentId);
    }
}
