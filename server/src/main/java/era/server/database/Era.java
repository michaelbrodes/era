/*
 * This file is generated by jOOQ.
*/
package era.server.database;


import era.server.database.tables.Assignment;
import era.server.database.tables.Course;
import era.server.database.tables.CourseStudent;
import era.server.database.tables.Student;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Era extends SchemaImpl {

    private static final long serialVersionUID = 1611469859;

    /**
     * The reference instance of <code>era</code>
     */
    public static final Era ERA = new Era();

    /**
     * The table <code>era.assignment</code>.
     */
    public final Assignment ASSIGNMENT = era.server.database.tables.Assignment.ASSIGNMENT;

    /**
     * The table <code>era.course</code>.
     */
    public final Course COURSE = era.server.database.tables.Course.COURSE;

    /**
     * The table <code>era.course_student</code>.
     */
    public final CourseStudent COURSE_STUDENT = era.server.database.tables.CourseStudent.COURSE_STUDENT;

    /**
     * The table <code>era.student</code>.
     */
    public final Student STUDENT = era.server.database.tables.Student.STUDENT;

    /**
     * No further instances allowed
     */
    private Era() {
        super("era", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Assignment.ASSIGNMENT,
            Course.COURSE,
            CourseStudent.COURSE_STUDENT,
            Student.STUDENT);
    }
}
